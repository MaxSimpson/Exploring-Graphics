// #ifndef _SPHERECOLLIDER_H_
// #define _SPHERECOLLIDER_H_

// #include "Collider.h"

// ////////////////////////////////////////////////////////////////////////////////
// /// @class Class for spherical colliders
// ////////////////////////////////////////////////////////////////////////////////
// class SphereCollider : public Collider{
//   public:
//     //////////////////////////////////////////////////////////////////////////////
//     /// @brief Constructor for sphere collider
//     SphereCollider(float _radius);

//     ////////////////////////////////////////////////////////////////////////////
//     /// @brief Update for sphere collider
//     void Update(glm::vec3 _translation);

//     ////////////////////////////////////////////////////////////////////////////
//     /// @brief Checks for collision with other colliders
//     glm::vec3 CheckCollision(Collider _newCollider);

//     ////////////////////////////////////////////////////////////////////////////
//     /// @brief Returns collider type (0 = Sphere, 1 = Rect etc...)
//     int getType();

//   private:
//     float radius; //< Radius of sphere
// };

// #endif